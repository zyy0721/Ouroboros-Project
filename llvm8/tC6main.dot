digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x94a04c0 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %c = alloca i32, align 4\l  %d = alloca i32, align 4\l  %e = alloca i32**, align 8\l  %f = alloca i32**, align 8\l  %q = alloca i32**, align 8\l  %g = alloca i32*, align 8\l  %h = alloca i32*, align 8\l  %p = alloca i32*, align 8\l  %ArrayTmp = alloca [10 x i32], align 16\l  %PointerArray = alloca [10 x i32*], align 16\l  %pointerCase = alloca %struct.PointerCase, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %newP = alloca i32*, align 8\l  %newPP = alloca i32*, align 8\l  store i32 0, i32* %retval, align 4\l  store i32 1, i32* %a, align 4\l  store i32 2, i32* %b, align 4\l  store i32 3, i32* %c, align 4\l  %0 = load i32, i32* %a, align 4\l  %1 = load i32, i32* %b, align 4\l  %add = add nsw i32 %0, %1\l  %2 = load i32, i32* %c, align 4\l  %add1 = add nsw i32 %add, %2\l  store i32 %add1, i32* %d, align 4\l  %3 = load i32, i32* %a, align 4\l  %4 = load i32, i32* %b, align 4\l  %sub = sub nsw i32 %3, %4\l  store i32 %sub, i32* %d, align 4\l  %5 = load i32, i32* %d, align 4\l  %6 = load i32, i32* %a, align 4\l  %mul = mul nsw i32 %5, %6\l  store i32 %mul, i32* %c, align 4\l  %7 = load i32, i32* %c, align 4\l  %add2 = add nsw i32 %7, 1\l  store i32 %add2, i32* %b, align 4\l  %8 = load i32**, i32*** %f, align 8\l  store i32** %8, i32*** %e, align 8\l  %9 = load i32**, i32*** %e, align 8\l  %10 = load i32*, i32** %9, align 8\l  store i32* %10, i32** @globalA, align 8\l  %11 = load i32, i32* %b, align 4\l  %cmp = icmp sgt i32 %11, 0\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x94a04c0:s0 -> Node0x94a2000;
	Node0x94a04c0:s1 -> Node0x94a1290;
	Node0x94a2000 [shape=record,label="{if.then:                                          \l  %12 = load i32*, i32** %g, align 8\l  %13 = load i32**, i32*** %e, align 8\l  store i32* %12, i32** %13, align 8\l  %14 = load i32**, i32*** %e, align 8\l  %15 = load i32*, i32** %14, align 8\l  store i32* %15, i32** %h, align 8\l  store i32** %h, i32*** %q, align 8\l  %16 = load i32*, i32** %p, align 8\l  %17 = load i32**, i32*** %f, align 8\l  store i32* %16, i32** %17, align 8\l  br label %if.end\l}"];
	Node0x94a2000 -> Node0x94a1360;
	Node0x94a1290 [shape=record,label="{if.else:                                          \l  %18 = load i32*, i32** %p, align 8\l  %19 = load i32**, i32*** %q, align 8\l  store i32* %18, i32** %19, align 8\l  %20 = load i32*, i32** %h, align 8\l  store i32* %20, i32** %g, align 8\l  store i32* %b, i32** %p, align 8\l  br label %if.end\l}"];
	Node0x94a1290 -> Node0x94a1360;
	Node0x94a1360 [shape=record,label="{if.end:                                           \l  br label %while.cond\l}"];
	Node0x94a1360 -> Node0x94a33e0;
	Node0x94a33e0 [shape=record,label="{while.cond:                                       \l  %21 = load i32, i32* %a, align 4\l  %cmp3 = icmp ne i32 %21, 0\l  br i1 %cmp3, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x94a33e0:s0 -> Node0x94a3520;
	Node0x94a33e0:s1 -> Node0x94a3600;
	Node0x94a3520 [shape=record,label="{while.body:                                       \l  %22 = load i32**, i32*** %q, align 8\l  %23 = load i32*, i32** %22, align 8\l  store i32* %23, i32** %h, align 8\l  %24 = load i32*, i32** %p, align 8\l  store i32* %24, i32** %g, align 8\l  br label %while.cond\l}"];
	Node0x94a3520 -> Node0x94a33e0;
	Node0x94a3600 [shape=record,label="{while.end:                                        \l  %25 = load i32, i32* %c, align 4\l  switch i32 %25, label %sw.default [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb5\l  ]\l|{<s0>def|<s1>1|<s2>2}}"];
	Node0x94a3600:s0 -> Node0x94a3990;
	Node0x94a3600:s1 -> Node0x94a3a70;
	Node0x94a3600:s2 -> Node0x94a3b40;
	Node0x94a3a70 [shape=record,label="{sw.bb:                                            \l  %26 = load i32, i32* %a, align 4\l  %27 = load i32, i32* %c, align 4\l  %add4 = add nsw i32 %26, %27\l  store i32 %add4, i32* %d, align 4\l  store i32* %d, i32** %p, align 8\l  br label %sw.epilog\l}"];
	Node0x94a3a70 -> Node0x94a3ef0;
	Node0x94a3b40 [shape=record,label="{sw.bb5:                                           \l  %28 = load i32, i32* %d, align 4\l  %29 = load i32, i32* %c, align 4\l  %sub6 = sub nsw i32 %29, 1\l  %mul7 = mul nsw i32 %sub6, 2\l  %add8 = add nsw i32 %28, %mul7\l  store i32 %add8, i32* %a, align 4\l  store i32* %a, i32** %p, align 8\l  br label %sw.epilog\l}"];
	Node0x94a3b40 -> Node0x94a3ef0;
	Node0x94a3990 [shape=record,label="{sw.default:                                       \l  br label %sw.epilog\l}"];
	Node0x94a3990 -> Node0x94a3ef0;
	Node0x94a3ef0 [shape=record,label="{sw.epilog:                                        \l  %30 = load i32, i32* %d, align 4\l  %cmp9 = icmp sgt i32 %30, 0\l  br i1 %cmp9, label %if.then10, label %if.else11\l|{<s0>T|<s1>F}}"];
	Node0x94a3ef0:s0 -> Node0x94a4430;
	Node0x94a3ef0:s1 -> Node0x94a4510;
	Node0x94a4430 [shape=record,label="{if.then10:                                        \l  %31 = load i32, i32* %a, align 4\l  %32 = load i32*, i32** %g, align 8\l  %33 = load i32**, i32*** %e, align 8\l  %call = call i32* @_Z4fun1iPiPS_(i32 %31, i32* %32, i32** %33)\l  store i32* %call, i32** %p, align 8\l  br label %if.end13\l}"];
	Node0x94a4430 -> Node0x94a4a70;
	Node0x94a4510 [shape=record,label="{if.else11:                                        \l  %34 = load i32, i32* %b, align 4\l  %35 = load i32*, i32** %h, align 8\l  %36 = load i32**, i32*** %q, align 8\l  %37 = load i32*, i32** %p, align 8\l  %call12 = call i32** @_Z4fun2iPiPS_S_(i32 %34, i32* %35, i32** %36, i32* %37)\l  store i32** %call12, i32*** %e, align 8\l  br label %if.end13\l}"];
	Node0x94a4510 -> Node0x94a4a70;
	Node0x94a4a70 [shape=record,label="{if.end13:                                         \l  %38 = load i32, i32* %c, align 4\l  %39 = load i32*, i32** %g, align 8\l  call void @_Z4fun3iPi(i32 %38, i32* %39)\l  %40 = load i32, i32* %c, align 4\l  %cmp14 = icmp ne i32 %40, 1\l  br i1 %cmp14, label %if.then15, label %if.else43\l|{<s0>T|<s1>F}}"];
	Node0x94a4a70:s0 -> Node0x94a50f0;
	Node0x94a4a70:s1 -> Node0x94a51a0;
	Node0x94a50f0 [shape=record,label="{if.then15:                                        \l  %41 = load i32*, i32** %g, align 8\l  %a16 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 0\l  store i32* %41, i32** %a16, align 8\l  %b17 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 1\l  %42 = load i32*, i32** %b17, align 8\l  store i32* %42, i32** %h, align 8\l  %43 = load i32*, i32** %p, align 8\l  %d18 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 2\l  %44 = load i32**, i32*** %d18, align 8\l  store i32* %43, i32** %44, align 8\l  %e19 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 3\l  %45 = load i32**, i32*** %e19, align 8\l  %46 = load i32*, i32** %45, align 8\l  store i32* %46, i32** %h, align 8\l  %47 = load i32, i32* %a, align 4\l  %cmp20 = icmp sgt i32 %47, 0\l  br i1 %cmp20, label %if.then21, label %if.else29\l|{<s0>T|<s1>F}}"];
	Node0x94a50f0:s0 -> Node0x94a5dd0;
	Node0x94a50f0:s1 -> Node0x94a5eb0;
	Node0x94a5dd0 [shape=record,label="{if.then21:                                        \l  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %ArrayTmp, i64 0,\l... i64 2\l  store i32* %arrayidx, i32** %p, align 8\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x94a5dd0 -> Node0x94a6250;
	Node0x94a6250 [shape=record,label="{for.cond:                                         \l  %48 = load i32, i32* %i, align 4\l  %cmp22 = icmp slt i32 %48, 10\l  br i1 %cmp22, label %for.body, label %for.end28\l|{<s0>T|<s1>F}}"];
	Node0x94a6250:s0 -> Node0x94a63f0;
	Node0x94a6250:s1 -> Node0x94a64d0;
	Node0x94a63f0 [shape=record,label="{for.body:                                         \l  store i32 0, i32* %j, align 4\l  br label %for.cond23\l}"];
	Node0x94a63f0 -> Node0x94a66c0;
	Node0x94a66c0 [shape=record,label="{for.cond23:                                       \l  %49 = load i32, i32* %j, align 4\l  %cmp24 = icmp slt i32 %49, 10\l  br i1 %cmp24, label %for.body25, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x94a66c0:s0 -> Node0x94a6830;
	Node0x94a66c0:s1 -> Node0x94a14d0;
	Node0x94a6830 [shape=record,label="{for.body25:                                       \l  %50 = load i32, i32* %a, align 4\l  %51 = load i32*, i32** %p, align 8\l  call void @_Z4fun3iPi(i32 %50, i32* %51)\l  br label %for.inc\l}"];
	Node0x94a6830 -> Node0x94a17c0;
	Node0x94a17c0 [shape=record,label="{for.inc:                                          \l  %52 = load i32, i32* %j, align 4\l  %inc = add nsw i32 %52, 1\l  store i32 %inc, i32* %j, align 4\l  br label %for.cond23\l}"];
	Node0x94a17c0 -> Node0x94a66c0;
	Node0x94a14d0 [shape=record,label="{for.end:                                          \l  br label %for.inc26\l}"];
	Node0x94a14d0 -> Node0x94a1a20;
	Node0x94a1a20 [shape=record,label="{for.inc26:                                        \l  %53 = load i32, i32* %i, align 4\l  %inc27 = add nsw i32 %53, 1\l  store i32 %inc27, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x94a1a20 -> Node0x94a6250;
	Node0x94a64d0 [shape=record,label="{for.end28:                                        \l  br label %if.end42\l}"];
	Node0x94a64d0 -> Node0x94a78c0;
	Node0x94a5eb0 [shape=record,label="{if.else29:                                        \l  %54 = load i32*, i32** %p, align 8\l  %arrayidx30 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 2\l  store i32* %54, i32** %arrayidx30, align 16\l  %b31 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 1\l  %55 = load i32*, i32** %b31, align 8\l  %arrayidx32 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 1\l  store i32* %55, i32** %arrayidx32, align 8\l  %arrayidx33 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 5\l  %d34 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 2\l  store i32** %arrayidx33, i32*** %d34, align 8\l  %arrayidx35 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 6\l  %56 = load i32*, i32** %arrayidx35, align 16\l  %e36 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 3\l  %57 = load i32**, i32*** %e36, align 8\l  store i32* %56, i32** %57, align 8\l  %e37 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 3\l  %58 = load i32**, i32*** %e37, align 8\l  %59 = load i32*, i32** %58, align 8\l  %arrayidx38 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 7\l  store i32* %59, i32** %arrayidx38, align 8\l  %arrayidx39 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 1\l  store i32** %arrayidx39, i32*** %f, align 8\l  %60 = load i32**, i32*** %f, align 8\l  %61 = load i32*, i32** %60, align 8\l  %arrayidx40 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 3\l  store i32* %61, i32** %arrayidx40, align 8\l  %arrayidx41 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 4\l  %62 = load i32*, i32** %arrayidx41, align 16\l  %63 = load i32**, i32*** %e, align 8\l  store i32* %62, i32** %63, align 8\l  br label %if.end42\l}"];
	Node0x94a5eb0 -> Node0x94a78c0;
	Node0x94a78c0 [shape=record,label="{if.end42:                                         \l  br label %if.end48\l}"];
	Node0x94a78c0 -> Node0x94a8c00;
	Node0x94a51a0 [shape=record,label="{if.else43:                                        \l  %e44 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 3\l  store i32** %g, i32*** %e44, align 8\l  %a45 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 0\l  store i32** %a45, i32*** %f, align 8\l  %b46 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 1\l  %64 = load i32*, i32** %b46, align 8\l  %65 = load i32**, i32*** %e, align 8\l  store i32* %64, i32** %65, align 8\l  %66 = load i32**, i32*** %f, align 8\l  %67 = load i32*, i32** %66, align 8\l  %a47 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 0\l  store i32* %67, i32** %a47, align 8\l  br label %if.end48\l}"];
	Node0x94a51a0 -> Node0x94a8c00;
	Node0x94a8c00 [shape=record,label="{if.end48:                                         \l  br label %while.cond49\l}"];
	Node0x94a8c00 -> Node0x94a48a0;
	Node0x94a48a0 [shape=record,label="{while.cond49:                                     \l  %68 = load i32, i32* %a, align 4\l  %cmp50 = icmp sgt i32 %68, 0\l  br i1 %cmp50, label %while.body51, label %while.end59\l|{<s0>T|<s1>F}}"];
	Node0x94a48a0:s0 -> Node0x94a96d0;
	Node0x94a48a0:s1 -> Node0x94a97b0;
	Node0x94a96d0 [shape=record,label="{while.body51:                                     \l  %arrayidx52 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 0\l  %69 = load i32*, i32** %arrayidx52, align 16\l  store i32* %69, i32** %g, align 8\l  %arrayidx53 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 1\l  %70 = load i32*, i32** %arrayidx53, align 8\l  %a54 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 0\l  store i32* %70, i32** %a54, align 8\l  %71 = load i32, i32* %a, align 4\l  %dec = add nsw i32 %71, -1\l  store i32 %dec, i32* %a, align 4\l  %72 = load i32, i32* %b, align 4\l  %cmp55 = icmp sgt i32 %72, 0\l  br i1 %cmp55, label %if.then56, label %if.else57\l|{<s0>T|<s1>F}}"];
	Node0x94a96d0:s0 -> Node0x94a9f70;
	Node0x94a96d0:s1 -> Node0x94a5280;
	Node0x94a9f70 [shape=record,label="{if.then56:                                        \l  %73 = load i32*, i32** %g, align 8\l  %74 = load i32**, i32*** %e, align 8\l  store i32* %73, i32** %74, align 8\l  %75 = load i32**, i32*** %e, align 8\l  %76 = load i32*, i32** %75, align 8\l  store i32* %76, i32** %h, align 8\l  store i32** %h, i32*** %q, align 8\l  %77 = load i32*, i32** %p, align 8\l  %78 = load i32**, i32*** %f, align 8\l  store i32* %77, i32** %78, align 8\l  br label %if.end58\l}"];
	Node0x94a9f70 -> Node0x94a57d0;
	Node0x94a5280 [shape=record,label="{if.else57:                                        \l  %79 = load i32*, i32** %p, align 8\l  %80 = load i32**, i32*** %q, align 8\l  store i32* %79, i32** %80, align 8\l  %81 = load i32*, i32** %h, align 8\l  store i32* %81, i32** %g, align 8\l  store i32* %b, i32** %p, align 8\l  br label %if.end58\l}"];
	Node0x94a5280 -> Node0x94a57d0;
	Node0x94a57d0 [shape=record,label="{if.end58:                                         \l  br label %while.cond49\l}"];
	Node0x94a57d0 -> Node0x94a48a0;
	Node0x94a97b0 [shape=record,label="{while.end59:                                      \l  %call60 = call noalias i8* @malloc(i64 40) #4\l  %82 = bitcast i8* %call60 to i32*\l  store i32* %82, i32** %newP, align 8\l  %call61 = call i8* @_Znam(i64 40) #5\l  %83 = bitcast i8* %call61 to i32*\l  store i32* %83, i32** %newPP, align 8\l  ret i32 0\l}"];
}

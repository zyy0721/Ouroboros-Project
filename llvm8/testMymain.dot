digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x97f6480 [shape=record,label="{entry:\l  %retval = alloca i32, align 4\l  %a = alloca i32, align 4\l  %b = alloca i32, align 4\l  %c = alloca i32, align 4\l  %d = alloca i32, align 4\l  %e = alloca i32**, align 8\l  %f = alloca i32**, align 8\l  %q = alloca i32**, align 8\l  %g = alloca i32*, align 8\l  %h = alloca i32*, align 8\l  %p = alloca i32*, align 8\l  %ArrayTmp = alloca [10 x i32], align 16\l  %PointerArray = alloca [10 x i32*], align 16\l  %pointerCase = alloca %struct.PointerCase, align 8\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %newP = alloca i32*, align 8\l  %newPP = alloca i32*, align 8\l  store i32 0, i32* %retval, align 4\l  store i32 1, i32* %a, align 4\l  store i32 2, i32* %b, align 4\l  store i32 3, i32* %c, align 4\l  %0 = load i32, i32* %a, align 4\l  %1 = load i32, i32* %b, align 4\l  %add = add nsw i32 %0, %1\l  %2 = load i32, i32* %c, align 4\l  %add1 = add nsw i32 %add, %2\l  store i32 %add1, i32* %d, align 4\l  %3 = load i32, i32* %a, align 4\l  %4 = load i32, i32* %b, align 4\l  %sub = sub nsw i32 %3, %4\l  store i32 %sub, i32* %d, align 4\l  %5 = load i32, i32* %d, align 4\l  %6 = load i32, i32* %a, align 4\l  %mul = mul nsw i32 %5, %6\l  store i32 %mul, i32* %c, align 4\l  %7 = load i32, i32* %c, align 4\l  %add2 = add nsw i32 %7, 1\l  store i32 %add2, i32* %b, align 4\l  %8 = load i32**, i32*** %f, align 8\l  store i32** %8, i32*** %e, align 8\l  %9 = load i32**, i32*** %e, align 8\l  %10 = load i32*, i32** %9, align 8\l  store i32* %10, i32** @globalC, align 8\l  %11 = load i32, i32* %b, align 4\l  %cmp = icmp sgt i32 %11, 0\l  br i1 %cmp, label %if.then, label %if.else\l|{<s0>T|<s1>F}}"];
	Node0x97f6480:s0 -> Node0x97f7b70;
	Node0x97f6480:s1 -> Node0x97f7220;
	Node0x97f7b70 [shape=record,label="{if.then:                                          \l  %12 = load i32*, i32** %g, align 8\l  %13 = load i32**, i32*** %e, align 8\l  store i32* %12, i32** %13, align 8\l  %14 = load i32**, i32*** %e, align 8\l  %15 = load i32*, i32** %14, align 8\l  store i32* %15, i32** %h, align 8\l  store i32** %h, i32*** %q, align 8\l  %16 = load i32*, i32** %p, align 8\l  %17 = load i32**, i32*** %f, align 8\l  store i32* %16, i32** %17, align 8\l  br label %if.end\l}"];
	Node0x97f7b70 -> Node0x97f72f0;
	Node0x97f7220 [shape=record,label="{if.else:                                          \l  %18 = load i32*, i32** %p, align 8\l  %19 = load i32**, i32*** %q, align 8\l  store i32* %18, i32** %19, align 8\l  %20 = load i32*, i32** %h, align 8\l  store i32* %20, i32** %g, align 8\l  store i32* %b, i32** %p, align 8\l  br label %if.end\l}"];
	Node0x97f7220 -> Node0x97f72f0;
	Node0x97f72f0 [shape=record,label="{if.end:                                           \l  br label %while.cond\l}"];
	Node0x97f72f0 -> Node0x97f4f00;
	Node0x97f4f00 [shape=record,label="{while.cond:                                       \l  %21 = load i32, i32* %a, align 4\l  %cmp3 = icmp ne i32 %21, 0\l  br i1 %cmp3, label %while.body, label %while.end\l|{<s0>T|<s1>F}}"];
	Node0x97f4f00:s0 -> Node0x97f9890;
	Node0x97f4f00:s1 -> Node0x97f9970;
	Node0x97f9890 [shape=record,label="{while.body:                                       \l  %22 = load i32**, i32*** %q, align 8\l  %23 = load i32*, i32** %22, align 8\l  store i32* %23, i32** %h, align 8\l  %24 = load i32*, i32** %p, align 8\l  store i32* %24, i32** %g, align 8\l  br label %while.cond\l}"];
	Node0x97f9890 -> Node0x97f4f00;
	Node0x97f9970 [shape=record,label="{while.end:                                        \l  %25 = load i32, i32* %c, align 4\l  switch i32 %25, label %sw.default [\l    i32 1, label %sw.bb\l    i32 2, label %sw.bb5\l  ]\l|{<s0>def|<s1>1|<s2>2}}"];
	Node0x97f9970:s0 -> Node0x97f9d00;
	Node0x97f9970:s1 -> Node0x97f9de0;
	Node0x97f9970:s2 -> Node0x97f9eb0;
	Node0x97f9de0 [shape=record,label="{sw.bb:                                            \l  %26 = load i32, i32* %a, align 4\l  %27 = load i32, i32* %c, align 4\l  %add4 = add nsw i32 %26, %27\l  store i32 %add4, i32* %d, align 4\l  store i32* %d, i32** %p, align 8\l  br label %sw.epilog\l}"];
	Node0x97f9de0 -> Node0x97fa260;
	Node0x97f9eb0 [shape=record,label="{sw.bb5:                                           \l  %28 = load i32, i32* %d, align 4\l  %29 = load i32, i32* %c, align 4\l  %sub6 = sub nsw i32 %29, 1\l  %mul7 = mul nsw i32 %sub6, 2\l  %add8 = add nsw i32 %28, %mul7\l  store i32 %add8, i32* %a, align 4\l  store i32* %a, i32** %p, align 8\l  br label %sw.epilog\l}"];
	Node0x97f9eb0 -> Node0x97fa260;
	Node0x97f9d00 [shape=record,label="{sw.default:                                       \l  br label %sw.epilog\l}"];
	Node0x97f9d00 -> Node0x97fa260;
	Node0x97fa260 [shape=record,label="{sw.epilog:                                        \l  %30 = load i32, i32* %d, align 4\l  %cmp9 = icmp sgt i32 %30, 0\l  br i1 %cmp9, label %if.then10, label %if.else11\l|{<s0>T|<s1>F}}"];
	Node0x97fa260:s0 -> Node0x97fa7a0;
	Node0x97fa260:s1 -> Node0x97fa880;
	Node0x97fa7a0 [shape=record,label="{if.then10:                                        \l  %31 = load i32, i32* %a, align 4\l  %32 = load i32*, i32** %g, align 8\l  %33 = load i32**, i32*** %e, align 8\l  %call = call i32* @_Z4fun1iPiPS_(i32 %31, i32* %32, i32** %33)\l  store i32* %call, i32** %p, align 8\l  br label %if.end13\l}"];
	Node0x97fa7a0 -> Node0x97fade0;
	Node0x97fa880 [shape=record,label="{if.else11:                                        \l  %34 = load i32, i32* %b, align 4\l  %35 = load i32*, i32** %h, align 8\l  %36 = load i32**, i32*** %q, align 8\l  %37 = load i32*, i32** %p, align 8\l  %call12 = call i32** @_Z4fun2iPiPS_S_(i32 %34, i32* %35, i32** %36, i32* %37)\l  store i32** %call12, i32*** %e, align 8\l  br label %if.end13\l}"];
	Node0x97fa880 -> Node0x97fade0;
	Node0x97fade0 [shape=record,label="{if.end13:                                         \l  %38 = load i32, i32* %c, align 4\l  %39 = load i32*, i32** %g, align 8\l  %call14 = call i32* @_Z4fun3iPi(i32 %38, i32* %39)\l  %40 = load i32, i32* %c, align 4\l  %41 = load i32*, i32** %g, align 8\l  %call15 = call i32* @_Z4fun4iPi(i32 %40, i32* %41)\l  %42 = load i32, i32* %c, align 4\l  %cmp16 = icmp ne i32 %42, 1\l  br i1 %cmp16, label %if.then17, label %if.else46\l|{<s0>T|<s1>F}}"];
	Node0x97fade0:s0 -> Node0x97f83b0;
	Node0x97fade0:s1 -> Node0x97f8460;
	Node0x97f83b0 [shape=record,label="{if.then17:                                        \l  %43 = load i32*, i32** %g, align 8\l  %a18 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 0\l  store i32* %43, i32** %a18, align 8\l  %b19 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 1\l  %44 = load i32*, i32** %b19, align 8\l  store i32* %44, i32** %h, align 8\l  %45 = load i32*, i32** %p, align 8\l  %d20 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 2\l  %46 = load i32**, i32*** %d20, align 8\l  store i32* %45, i32** %46, align 8\l  %e21 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 3\l  %47 = load i32**, i32*** %e21, align 8\l  %48 = load i32*, i32** %47, align 8\l  store i32* %48, i32** %h, align 8\l  %49 = load i32, i32* %a, align 4\l  %cmp22 = icmp sgt i32 %49, 0\l  br i1 %cmp22, label %if.then23, label %if.else32\l|{<s0>T|<s1>F}}"];
	Node0x97f83b0:s0 -> Node0x97fc320;
	Node0x97f83b0:s1 -> Node0x97fc400;
	Node0x97fc320 [shape=record,label="{if.then23:                                        \l  %arrayidx = getelementptr inbounds [10 x i32], [10 x i32]* %ArrayTmp, i64 0,\l... i64 2\l  store i32* %arrayidx, i32** %p, align 8\l  store i32 0, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x97fc320 -> Node0x97fc7a0;
	Node0x97fc7a0 [shape=record,label="{for.cond:                                         \l  %50 = load i32, i32* %i, align 4\l  %cmp24 = icmp slt i32 %50, 10\l  br i1 %cmp24, label %for.body, label %for.end31\l|{<s0>T|<s1>F}}"];
	Node0x97fc7a0:s0 -> Node0x97fc940;
	Node0x97fc7a0:s1 -> Node0x97fca20;
	Node0x97fc940 [shape=record,label="{for.body:                                         \l  store i32 0, i32* %j, align 4\l  br label %for.cond25\l}"];
	Node0x97fc940 -> Node0x97fcc10;
	Node0x97fcc10 [shape=record,label="{for.cond25:                                       \l  %51 = load i32, i32* %j, align 4\l  %cmp26 = icmp slt i32 %51, 10\l  br i1 %cmp26, label %for.body27, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x97fcc10:s0 -> Node0x97fcd80;
	Node0x97fcc10:s1 -> Node0x97fce60;
	Node0x97fcd80 [shape=record,label="{for.body27:                                       \l  %52 = load i32, i32* %a, align 4\l  %53 = load i32*, i32** %p, align 8\l  %call28 = call i32* @_Z4fun3iPi(i32 %52, i32* %53)\l  br label %for.inc\l}"];
	Node0x97fcd80 -> Node0x97fd150;
	Node0x97fd150 [shape=record,label="{for.inc:                                          \l  %54 = load i32, i32* %j, align 4\l  %inc = add nsw i32 %54, 1\l  store i32 %inc, i32* %j, align 4\l  br label %for.cond25\l}"];
	Node0x97fd150 -> Node0x97fcc10;
	Node0x97fce60 [shape=record,label="{for.end:                                          \l  br label %for.inc29\l}"];
	Node0x97fce60 -> Node0x97fd3d0;
	Node0x97fd3d0 [shape=record,label="{for.inc29:                                        \l  %55 = load i32, i32* %i, align 4\l  %inc30 = add nsw i32 %55, 1\l  store i32 %inc30, i32* %i, align 4\l  br label %for.cond\l}"];
	Node0x97fd3d0 -> Node0x97fc7a0;
	Node0x97fca20 [shape=record,label="{for.end31:                                        \l  br label %if.end45\l}"];
	Node0x97fca20 -> Node0x97fd620;
	Node0x97fc400 [shape=record,label="{if.else32:                                        \l  %56 = load i32*, i32** %p, align 8\l  %arrayidx33 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 2\l  store i32* %56, i32** %arrayidx33, align 16\l  %b34 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 1\l  %57 = load i32*, i32** %b34, align 8\l  %arrayidx35 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 1\l  store i32* %57, i32** %arrayidx35, align 8\l  %arrayidx36 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 5\l  %d37 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 2\l  store i32** %arrayidx36, i32*** %d37, align 8\l  %arrayidx38 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 6\l  %58 = load i32*, i32** %arrayidx38, align 16\l  %e39 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 3\l  %59 = load i32**, i32*** %e39, align 8\l  store i32* %58, i32** %59, align 8\l  %e40 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 3\l  %60 = load i32**, i32*** %e40, align 8\l  %61 = load i32*, i32** %60, align 8\l  %arrayidx41 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 7\l  store i32* %61, i32** %arrayidx41, align 8\l  %arrayidx42 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 1\l  store i32** %arrayidx42, i32*** %f, align 8\l  %62 = load i32**, i32*** %f, align 8\l  %63 = load i32*, i32** %62, align 8\l  %arrayidx43 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 3\l  store i32* %63, i32** %arrayidx43, align 8\l  %arrayidx44 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 4\l  %64 = load i32*, i32** %arrayidx44, align 16\l  %65 = load i32**, i32*** %e, align 8\l  store i32* %64, i32** %65, align 8\l  br label %if.end45\l}"];
	Node0x97fc400 -> Node0x97fd620;
	Node0x97fd620 [shape=record,label="{if.end45:                                         \l  br label %if.end51\l}"];
	Node0x97fd620 -> Node0x97fab90;
	Node0x97f8460 [shape=record,label="{if.else46:                                        \l  %e47 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 3\l  store i32** %g, i32*** %e47, align 8\l  %a48 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 0\l  store i32** %a48, i32*** %f, align 8\l  %b49 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 1\l  %66 = load i32*, i32** %b49, align 8\l  %67 = load i32**, i32*** %e, align 8\l  store i32* %66, i32** %67, align 8\l  %68 = load i32**, i32*** %f, align 8\l  %69 = load i32*, i32** %68, align 8\l  %a50 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 0\l  store i32* %69, i32** %a50, align 8\l  br label %if.end51\l}"];
	Node0x97f8460 -> Node0x97fab90;
	Node0x97fab90 [shape=record,label="{if.end51:                                         \l  br label %while.cond52\l}"];
	Node0x97fab90 -> Node0x97ff2d0;
	Node0x97ff2d0 [shape=record,label="{while.cond52:                                     \l  %70 = load i32, i32* %a, align 4\l  %cmp53 = icmp sgt i32 %70, 0\l  br i1 %cmp53, label %while.body54, label %while.end62\l|{<s0>T|<s1>F}}"];
	Node0x97ff2d0:s0 -> Node0x97ff440;
	Node0x97ff2d0:s1 -> Node0x97ff520;
	Node0x97ff440 [shape=record,label="{while.body54:                                     \l  %arrayidx55 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 0\l  %71 = load i32*, i32** %arrayidx55, align 16\l  store i32* %71, i32** %g, align 8\l  %arrayidx56 = getelementptr inbounds [10 x i32*], [10 x i32*]*\l... %PointerArray, i64 0, i64 1\l  %72 = load i32*, i32** %arrayidx56, align 8\l  %a57 = getelementptr inbounds %struct.PointerCase, %struct.PointerCase*\l... %pointerCase, i32 0, i32 0\l  store i32* %72, i32** %a57, align 8\l  %73 = load i32, i32* %a, align 4\l  %dec = add nsw i32 %73, -1\l  store i32 %dec, i32* %a, align 4\l  %74 = load i32, i32* %b, align 4\l  %cmp58 = icmp sgt i32 %74, 0\l  br i1 %cmp58, label %if.then59, label %if.else60\l|{<s0>T|<s1>F}}"];
	Node0x97ff440:s0 -> Node0x97fb940;
	Node0x97ff440:s1 -> Node0x97fba20;
	Node0x97fb940 [shape=record,label="{if.then59:                                        \l  %75 = load i32*, i32** %g, align 8\l  %76 = load i32**, i32*** %e, align 8\l  store i32* %75, i32** %76, align 8\l  %77 = load i32**, i32*** %e, align 8\l  %78 = load i32*, i32** %77, align 8\l  store i32* %78, i32** %h, align 8\l  store i32** %h, i32*** %q, align 8\l  %79 = load i32*, i32** %p, align 8\l  %80 = load i32**, i32*** %f, align 8\l  store i32* %79, i32** %80, align 8\l  br label %if.end61\l}"];
	Node0x97fb940 -> Node0x9800910;
	Node0x97fba20 [shape=record,label="{if.else60:                                        \l  %81 = load i32*, i32** %p, align 8\l  %82 = load i32**, i32*** %q, align 8\l  store i32* %81, i32** %82, align 8\l  %83 = load i32*, i32** %h, align 8\l  store i32* %83, i32** %g, align 8\l  store i32* %b, i32** %p, align 8\l  br label %if.end61\l}"];
	Node0x97fba20 -> Node0x9800910;
	Node0x9800910 [shape=record,label="{if.end61:                                         \l  br label %while.cond52\l}"];
	Node0x9800910 -> Node0x97ff2d0;
	Node0x97ff520 [shape=record,label="{while.end62:                                      \l  %call63 = call noalias i8* @malloc(i64 40) #5\l  %84 = bitcast i8* %call63 to i32*\l  store i32* %84, i32** %newP, align 8\l  %call64 = call i8* @_Znam(i64 40) #6\l  %85 = bitcast i8* %call64 to i32*\l  store i32* %85, i32** %newPP, align 8\l  ret i32 0\l}"];
}
